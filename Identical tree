 bool isIdentical(Node *r1, Node *r2)
    {
        //Your Code here
        bool left;
        bool right;
        if(r1==NULL && r2==NULL){
            return true;
        }
        if(r1!=NULL && r2==NULL || r1==NULL && r2!=NULL){
            return false;
        }
        if(r1->data!=r2->data){
            return false;
        }
        left=isIdentical(r1->left,r2->left);
        right=isIdentical(r1->right,r2->right);
        if(!left || !right){
            return false;
        }
        return true;
    }
    Time Complexity it depends lower node of the tree where (n<m) So time complexity is tc o(n)
    SC o(h)
