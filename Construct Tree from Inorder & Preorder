class Solution{
    
    public:
    Node* solve(int in[],int pre[],int &index,int instart,int inend,int n,map<int,int> &mapping){
        if(index>=n || instart>inend){
            return NULL;
        }
        int element=pre[index++];
        Node* root=new Node(element);
        int pos=mapping[element];
        root->left=solve(in,pre,index,instart,pos-1,n,mapping);
        root->right=solve(in,pre,index,pos+1,inend,n,mapping);
        return root;
    }
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        int preorderIndex=0;
        map<int,int> mapping;
        for(int i=0;i<n;i++){
            mapping[in[i]]=i;
        }
    Node* ans=solve(in,pre,preorderIndex,0,n-1,n,mapping);
    return ans;
    }
};
