void reverse(vector<int> &v){
    int i=0;
    int j=v.size()-1;
    while(i<j){
        int temp=v[i];
        v[i]=v[j];
        v[j]=temp;
        i++;
        j--;
    }

}
vector<int> reverseLevelOrder(Node *root)
{
    // code here
     vector<int> v;
      queue<Node*> q;
      if(root==NULL){
          return v;
      }
      q.push(root);
      while(!q.empty()){
          Node* front=q.front();
          v.push_back(front->data);
            q.pop();
            if(front->right){
               q.push(front->right); 
            }
           
            if(front->left){
                q.push(front->left);
            }
            
      }
      reverse(v);
      return v;
}
